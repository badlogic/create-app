version: "3.8"

services:
  frontend-builder:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend-dist:/app/dist
    command: npm run build:watch
    profiles:
      - dev

  backend-builder:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend-dist:/app/dist
    command: npm run build:watch
    profiles:
      - dev

  frontend:
    image: nginx:alpine
    restart: unless-stopped
    labels:
      caddy: {{domain}}
      caddy.reverse_proxy: "{{upstreams 80}}"
    volumes:
      - frontend-dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - caddy-network
      - internal
    ports:
      - "{{frontendPort}}:80"  # For local development

  backend:
    image: node:18-alpine
    restart: unless-stopped
    working_dir: /app
    environment:
      - PORT={{apiPort}}
      - NODE_ENV=development
    volumes:
      - backend-dist:/app/dist:ro
      - ./backend/package.json:/app/package.json:ro
    command: ["node", "--inspect=0.0.0.0:9230", "dist/server.js"]
    networks:
      - internal
    ports:
      - "{{apiPort}}:{{apiPort}}"  # For local development
      - "9230:9230"  # Debug port

volumes:
  frontend-dist:
  backend-dist:

networks:
  caddy-network:
    external: true
  internal:
    driver: bridge